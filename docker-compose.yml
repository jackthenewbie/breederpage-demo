version: '3.8'

name: breederpage-demo
services:
  breederpage-demo:
    container_name: breederpage-demo
    image: wbdecjacob/breederpage-demo-node-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    #ports:
    #  - "9010:3000"
    volumes:
      # Mount source code but exclude node_modules to avoid overwriting the container's modules
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      # Default MongoDB connection that works with the default network
      - MONGO_URI=${MONGO_URI:-mongodb://localhost:27017/mydatabase}
    env_file:
      - path: .env
    networks:
      - default
      - mongodb-network
      - rproxy-traefik
    labels:
      - "traefik.docker.network=rproxy-traefik"
      - "traefik.enable=true"                                                    # Enable Traefik for this container :contentReference[oaicite:0]{index=0}
      - "traefik.http.routers.breederpage-demo.rule=Host(`breeder.decoyer.win`)"               # Route based on your domain :contentReference[oaicite:1]{index=1} 
      - "traefik.http.routers.breederpage-demo.entrypoints=websecure"                        # Bind to the HTTPS entrypoint :contentReference[oaicite:2]{index=2}
      - "traefik.http.routers.breederpage-demo.tls=true"
    restart: unless-stopped
    command: pnpm start

networks:
  default:
    # This is the default network that will be created if no external network exists
  mongodb-network:
    # This allows connecting to an external network if it exists, otherwise falls back to default
    external: true
    name: ${MONGODB_NETWORK:-mongodb-network}
  rproxy-traefik:
    external: true