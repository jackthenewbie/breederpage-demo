name: breederpage-demo
services:
  breederpage-demo:
    container_name: breederpage-demo
    image: wbdecjacob/breederpage-demo-node-app:latest
    build:
      context: .
      dockerfile: Dockerfile
    #ports:
    #  - "9010:3000"
    volumes:
      # Mount source code but exclude node_modules to avoid overwriting the container's modules
      - ./:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      # Default MongoDB connection that works with the default network
      - MONGO_URI=${MONGO_URI:-mongodb://localhost:27017/mydatabase}
    env_file:
      - path: .env
    networks:
      - default
      - mongodb-network
      - rproxy-traefik
    labels:
      - "traefik.docker.network=rproxy-traefik"
      - "traefik.enable=true"
      - "traefik.http.routers.breederpage-demo.rule=Host(`breeder.decoyer.win`)"
    restart: unless-stopped
    command: pnpm start
    depends_on:
      - rclone
  rclone:
    container_name: rclone
    image: rclone/rclone:latest
    command: rcd --rc-addr=:$RCL_PORT --rc-user=$RCL_USERNAME --rc-pass=$RCL_PASSWORD --rc-serve -vv
    networks:
      - default
    volumes:
      - ./rclone.conf:/config/rclone/rclone.conf:ro
      - ${UPLOAD_PATH}:/data/./${UPLOAD_PATH}:ro
networks:
  default:
    name: breederpage-network
    # This is the default network that will be created if no external network exists
  mongodb-network:
    # This allows connecting to an external network if it exists, otherwise falls back to default
    external: true
    name: ${MONGODB_NETWORK:-mongodb-network}
  rproxy-traefik:
    external: true